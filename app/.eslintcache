[{"/Users/kartik/Desktop/buckets-todo/app/src/index.tsx":"1","/Users/kartik/Desktop/buckets-todo/app/src/reportWebVitals.ts":"2","/Users/kartik/Desktop/buckets-todo/app/src/App.tsx":"3","/Users/kartik/Desktop/buckets-todo/app/src/store/Store.ts":"4","/Users/kartik/Desktop/buckets-todo/app/src/Routes.tsx":"5","/Users/kartik/Desktop/buckets-todo/app/src/pages/Layout.tsx":"6","/Users/kartik/Desktop/buckets-todo/app/src/store/Reducer.ts":"7","/Users/kartik/Desktop/buckets-todo/app/src/shared/core/LocalStorage.ts":"8","/Users/kartik/Desktop/buckets-todo/app/src/pages/Todo.tsx":"9","/Users/kartik/Desktop/buckets-todo/app/src/pages/Bucket.tsx":"10","/Users/kartik/Desktop/buckets-todo/app/src/store/Action.ts":"11","/Users/kartik/Desktop/buckets-todo/app/src/container/Todo.tsx":"12","/Users/kartik/Desktop/buckets-todo/app/src/container/Bucket.tsx":"13","/Users/kartik/Desktop/buckets-todo/app/src/api/BucketApi.ts":"14","/Users/kartik/Desktop/buckets-todo/app/src/api/TodoApi.ts":"15","/Users/kartik/Desktop/buckets-todo/app/src/components/TodoAdd.tsx":"16","/Users/kartik/Desktop/buckets-todo/app/src/components/TodoList.tsx":"17","/Users/kartik/Desktop/buckets-todo/app/src/components/BucketList.tsx":"18","/Users/kartik/Desktop/buckets-todo/app/src/components/BucketAdd.tsx":"19","/Users/kartik/Desktop/buckets-todo/app/src/api/UriConstants.ts":"20","/Users/kartik/Desktop/buckets-todo/app/src/shared/core/HttpRequest.ts":"21","/Users/kartik/Desktop/buckets-todo/app/src/container/Login.tsx":"22","/Users/kartik/Desktop/buckets-todo/app/src/api/AccountApi.ts":"23","/Users/kartik/Desktop/buckets-todo/app/src/shared/RouteGuard.tsx":"24","/Users/kartik/Desktop/buckets-todo/app/src/container/Register.tsx":"25"},{"size":627,"mtime":1611423598482,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1610365965155,"results":"28","hashOfConfig":"27"},{"size":601,"mtime":1611423604395,"results":"29","hashOfConfig":"27"},{"size":1418,"mtime":1614415704206,"results":"30","hashOfConfig":"27"},{"size":918,"mtime":1611425137417,"results":"31","hashOfConfig":"27"},{"size":1651,"mtime":1614415570411,"results":"32","hashOfConfig":"27"},{"size":2317,"mtime":1614412786451,"results":"33","hashOfConfig":"27"},{"size":631,"mtime":1610438559306,"results":"34","hashOfConfig":"27"},{"size":743,"mtime":1610622384009,"results":"35","hashOfConfig":"27"},{"size":263,"mtime":1610437852794,"results":"36","hashOfConfig":"27"},{"size":7304,"mtime":1614414149322,"results":"37","hashOfConfig":"27"},{"size":2251,"mtime":1614414173885,"results":"38","hashOfConfig":"27"},{"size":1492,"mtime":1610484025187,"results":"39","hashOfConfig":"27"},{"size":1349,"mtime":1614405429580,"results":"40","hashOfConfig":"27"},{"size":1615,"mtime":1614405597831,"results":"41","hashOfConfig":"27"},{"size":1786,"mtime":1614413010476,"results":"42","hashOfConfig":"27"},{"size":2031,"mtime":1610643399211,"results":"43","hashOfConfig":"27"},{"size":1127,"mtime":1610483535389,"results":"44","hashOfConfig":"27"},{"size":1538,"mtime":1614406360635,"results":"45","hashOfConfig":"27"},{"size":355,"mtime":1611419597298,"results":"46","hashOfConfig":"27"},{"size":2502,"mtime":1610477635076,"results":"47","hashOfConfig":"27"},{"size":2686,"mtime":1611424046663,"results":"48","hashOfConfig":"27"},{"size":751,"mtime":1611424139730,"results":"49","hashOfConfig":"27"},{"size":803,"mtime":1611423379921,"results":"50","hashOfConfig":"27"},{"size":3012,"mtime":1611425533873,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"a2nghn",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"54"},"/Users/kartik/Desktop/buckets-todo/app/src/index.tsx",[],["115","116"],"/Users/kartik/Desktop/buckets-todo/app/src/reportWebVitals.ts",[],"/Users/kartik/Desktop/buckets-todo/app/src/App.tsx",["117","118"],"import React from \"react\";\nimport { Provider, useSelector } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./App.scss\";\nimport Layout from \"./pages/Layout\";\nimport Routes from \"./Routes\";\nimport { RootState, store } from \"./store/Store\";\n\nfunction App() {\n  const authState = useSelector((state: RootState) => state.auth);\n  return (\n    <>\n      <BrowserRouter>\n        {authState.isAuthenticated ? (\n          <Layout>\n            <Routes />\n          </Layout>\n        ) : (\n          <Routes />\n        )}\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","/Users/kartik/Desktop/buckets-todo/app/src/store/Store.ts",["119"],"import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { bucketReducer, todoReducer, authReducer } from \"../store/Reducer\";\n\nimport { loadState, saveState } from \"../shared/core/LocalStorage\";\nimport { memoize } from \"lodash\";\n\n// Combine all reducers\nconst rootReducers = combineReducers({\n  bucket: bucketReducer,\n  todo: todoReducer,\n  auth: authReducer,\n});\n\n// Combine all middlewares\nconst middlewares = [thunk];\n\n// dev tools for redux-devtools\n// const composeEnhancers =\n//   (window as any)?.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n//     realtime: true,\n//     trace: true,\n//     traceLimit: 25,\n//   }) || compose;\n\n// rehydrate the state by persiting from the local storage.\nconst persistedState = loadState() ?? {};\n\nexport const store = createStore(rootReducers,{ auth: persistedState }, applyMiddleware(...middlewares));\n\nstore.subscribe(() => {\n  console.info(\"[Store.ts] subscribe\");\n  const persistState = store.getState();\n  const saveStateMemo = memoize((authState) => {\n    saveState(authState);\n  });\n  saveStateMemo(persistState.auth);\n});\n\nexport type RootAction = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n// store.subscribe(throttle(() => {\n//     console.info('[Store.ts] subscribe');\n//     const persistState = store.getState();\n//     saveState(persistState.Auth);\n// }, 10000));\n","/Users/kartik/Desktop/buckets-todo/app/src/Routes.tsx",[],"/Users/kartik/Desktop/buckets-todo/app/src/pages/Layout.tsx",["120"],"import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { unSetAuth } from \"../store/Action\";\nimport { terminateState } from \"../shared/core/LocalStorage\";\n\ninterface ILayoutProps {}\n\nconst Layout: React.FunctionComponent<ILayoutProps> = ({ children }) => {\n  const dispact = useDispatch();\n\n  const logout = () => {\n    dispact(unSetAuth());\n    terminateState();\n  };\n\n  return (\n    <>\n      {/* Header section */}\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to={{ pathname: \"/bucket\" }}\n              >\n                {\" \"}\n                Bucket <span className=\"sr-only\">(current)</span>{\" \"}\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to={{ pathname: \"/todo\" }}\n              >\n                {\" \"}\n                Todo <span className=\"sr-only\">(current)</span>\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" onClick={logout}>\n                Logout <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      {/* Header section */}\n      {children}\n    </>\n  );\n};\n\nexport default Layout;\n","/Users/kartik/Desktop/buckets-todo/app/src/store/Reducer.ts",[],"/Users/kartik/Desktop/buckets-todo/app/src/shared/core/LocalStorage.ts",[],"/Users/kartik/Desktop/buckets-todo/app/src/pages/Todo.tsx",["121"],"import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport TodoContainer from \"../container/Todo\";\nimport { getTodoListAsync } from \"../store/Action\";\nimport { RootAction, RootState } from \"../store/Store\";\n\ninterface ITodoProps {}\n\nconst Todo: React.FunctionComponent<ITodoProps> = (props) => {\n  const todoList = useSelector((state: RootState) => state.todo.list);\n  const dispatch = useDispatch<RootAction | any>();\n\n  useEffect(() => {\n    dispatch(getTodoListAsync());\n  }, []);\n\n  return (\n    <>\n      <div className=\"row\">\n        {todoList.map((model) => (\n          <TodoContainer model={model} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Todo;\n","/Users/kartik/Desktop/buckets-todo/app/src/pages/Bucket.tsx",[],"/Users/kartik/Desktop/buckets-todo/app/src/store/Action.ts",["122","123","124"],"import { AUTH_ACTION, BUCKET_ACTION, TODO_ACTION } from \"./Type\";\nimport { RootAction, RootState } from \"./Store\";\nimport { IBucket } from \"../interface/IBucket\";\nimport { get, getAll, save, update } from \"../api/BucketApi\";\nimport {\n  deleteTodo,\n  get as getTodo,\n  getAll as getAllTodo,\n  save as saveTodo,\n  update as updateTodo,\n} from \"../api/TodoApi\";\n\nimport { login as loginApi, register } from \"../api/AccountApi\";\nimport { ITodo, ITodoViewModel } from \"../interface/ITodo\";\nimport { IAuth, IUser } from \"../interface/IUser\";\nimport { debug } from \"console\";\n\nexport function setBucketList(\n  args: IBucket[]\n): ActionAny<keyof typeof BUCKET_ACTION, IBucket[]> {\n  return {\n    type: \"SET_BUCKET_LIST\",\n    payload: args,\n  };\n}\n\nexport function unsetBucketList(): ActionAny<\n  keyof typeof BUCKET_ACTION,\n  IBucket[]\n> {\n  return {\n    type: \"UNSET_BUCKET_LIST\",\n  };\n}\n\nexport function setBucket(\n  args: IBucket\n): ActionAny<keyof typeof BUCKET_ACTION, IBucket> {\n  return {\n    type: \"SET_BUCKET\",\n    payload: args,\n  };\n}\n\nexport function unsetBucket(): ActionAny<keyof typeof BUCKET_ACTION, IBucket> {\n  return {\n    type: \"UNSET_BUCKET\",\n  };\n}\n\nexport function setTodoList(\n  args: ITodoViewModel | ITodoViewModel[]\n): ActionAny<keyof typeof TODO_ACTION, ITodoViewModel | ITodoViewModel[]> {\n  return {\n    type: \"SET_TODO_LIST\",\n    payload: args,\n  };\n}\n\nexport function unsetTodoList(): ActionAny<\n  keyof typeof TODO_ACTION,\n  ITodoViewModel[]\n> {\n  return {\n    type: \"UNSET_TODO_LIST\",\n  };\n}\n\n//#region  Action Creators\n\nexport function getBucketListAsync() {\n  return async (dispact: RootAction) => {\n    getAll()\n      .then((res) => {\n        dispact(unsetBucketList());\n        dispact(setBucketList(res));\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n}\n\nexport function getBucketAsync(id: number) {\n  return async (dispact: RootAction) => {\n    dispact(unsetBucket());\n    get(id)\n      .then((res) => {\n        dispact(setBucket(res));\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n}\n\nexport function saveBucketAsync(model: IBucket) {\n  return async (dispact: RootAction | any) => {\n    console.log(\"[Action.ts] [saveBucketAsync]\", model);\n    save(model)\n      .then((res) => {\n        console.log(\"[Action.ts] [saveBucketAsync] res :\", res);\n        dispact(unsetBucket());\n        dispact(getBucketListAsync());\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n}\n\nexport function updateBucketAsync(id: string, model: IBucket) {\n  return async (dispact: RootAction | any) => {\n    console.log(\"[Action.ts] [updateBucketAsync]\", id, model);\n    update(id, model)\n      .then((res) => {\n        console.log(\"[Action.ts] [updateBucketAsync] res :\", res);\n        dispact(unsetBucket());\n        dispact(getBucketListAsync());\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n}\n\nexport function submitBucketAsync(model: IBucket) {\n  return async (dispact: RootAction | any) => {\n    debugger;\n    console.log(\"[Action.ts] [submitBucketAsync]\", model._id, model);\n    if (model._id) dispact(updateBucketAsync(model._id, model));\n    else dispact(saveBucketAsync(model));\n  };\n}\n\nexport function getTodoListAsync() {\n  return async (dispact: RootAction | any, getState: any) => {\n    dispact(getBucketListAsync()).then(() => {\n      getAllTodo()\n        .then((todoRes) => {\n          const globalState = getState() as RootState;\n          const buckets = globalState.bucket.list;\n          const viewModel: ITodoViewModel[] = buckets.map((bucket) => {\n            const todos = todoRes.map((todo) => {\n              return {\n                ...todo,\n                isAccomplished: JSON.parse(\n                  (todo.isAccomplished as unknown) as string\n                ),\n              };\n            });\n            const list = todos.filter((todo) => todo.bucketId == bucket._id);\n            return {\n              bucketId: bucket._id,\n              bucketName: bucket.name,\n              TodoList: list,\n            };\n          });\n          console.log(\"viewModel\", viewModel);\n          dispact(unsetTodoList());\n          dispact(setTodoList(viewModel));\n        })\n        .catch((err: Error) => {\n          console.log(err);\n        });\n    });\n  };\n}\n\nexport function saveTodoAsync(model: ITodo) {\n  return async (dispact: RootAction | any) => {\n    console.log(\"[Action.ts] [saveTodoAsync]\", model);\n    saveTodo(model)\n      .then((res) => {\n        console.log(\"[Action.ts] [saveTodoAsync] res :\", res);\n        dispact(getTodoListAsync());\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n}\n\nexport function updateTodoAsync(id: string, model: ITodo) {\n  return async (dispact: RootAction | any) => {\n    console.log(\"[Action.ts] [updateTodoAsync]\", id, model);\n    updateTodo(id, model)\n      .then((res) => {\n        console.log(\"[Action.ts] [updateTodoAsync] res :\", res);\n        dispact(getTodoListAsync());\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n}\n\nexport function submitTodoAsync(model: ITodo) {\n  return async (dispact: RootAction | any) => {\n    console.log(\"[Action.ts] [submitTodoAsync]\", model._id, model);\n    if (model._id) dispact(updateTodoAsync(model._id, model));\n    else {\n      delete model._id;\n      dispact(saveTodoAsync(model));\n    }\n  };\n}\n\nexport function deleteTodoAsync(id: string) {\n  return async (dispact: RootAction | any) => {\n    console.log(\"[Action.ts] [deleteTodoAsync]\", id);\n    deleteTodo(id)\n      .then((res) => {\n        console.log(\"[Action.ts] [deleteTodoAsync] res :\", res);\n        dispact(getTodoListAsync());\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n}\n\n//#endregion\n\nexport function setAuth(\n  args: IAuth\n): ActionAny<keyof typeof AUTH_ACTION, IAuth> {\n  return {\n    type: \"SET_AUTH\",\n    payload: args,\n  };\n}\n\nexport function unSetAuth(\n  args?: IAuth\n): ActionAny<keyof typeof AUTH_ACTION, IAuth> {\n  return {\n    type: \"UNSET_AUTH\",\n    payload: args,\n  };\n}\n\nexport function login(\n  model: IUser,\n  done: (error: Error | null, res: any) => void\n) {\n  return async (dispact: RootAction) => {\n    loginApi(model)\n      .then((data: any) => {\n        console.log(`[Action.ts][login] res : ${JSON.stringify(data)}`);\n        if (data?.appCode > 0) {\n          const AuthSession: IAuth = {\n            isAuthenticated: true,\n            authInfo: (data?.data as unknown) as IUser,\n          };\n          dispact(setAuth(AuthSession));\n          done(null, data?.data);\n        } else {\n          done(new Error(data?.data), null);\n        }\n      })\n      .catch((err: Error) => {\n        console.log(`[Action.ts][login] err : ${err}`);\n        dispact(unSetAuth());\n        done(err, null);\n      });\n  };\n}\n\nexport function signUp(\n  formData: IUser,\n  done: (error: Error | null, res: unknown) => void\n) {\n  return async (dispact: RootAction) => {\n    register(formData)\n      .then((data) => {\n        console.log(`[Action.ts] [signUp] res : ${JSON.stringify(data)}`);\n        done(null, data);\n      })\n      .catch((err: Error) => {\n        console.log(`[Action.ts] [signUp] err : ${JSON.stringify(err)}`);\n        done(err, null);\n      });\n  };\n}\n","/Users/kartik/Desktop/buckets-todo/app/src/container/Todo.tsx",["125","126","127","128","129"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport TodoAdd from \"../components/TodoAdd\";\nimport TodoList from \"../components/TodoList\";\nimport { ITodo, ITodoViewModel } from \"../interface/ITodo\";\nimport {\n  deleteTodoAsync,\n  getTodoListAsync,\n  submitTodoAsync,\n} from \"../store/Action\";\nimport { RootAction, RootState } from \"../store/Store\";\n\ninterface ITodoProps {\n  model: ITodoViewModel;\n}\n\nconst Todo: React.FunctionComponent<ITodoProps> = ({ model }) => {\n  const [todo, setTodo] = useState({} as ITodo);\n  const dispatch = useDispatch<RootAction | any>();\n\n  const onEditHandler = useCallback((item: ITodo) => {\n    console.log(\"[Bucket.tsx] [oneditHandler]\", item);\n    setTodo(item);\n  }, []);\n\n  const onSubmitHandler = useCallback((item: ITodo) => {\n    const postModel = { ...item, ...model };\n    console.log(\"[Bucket.tsx] [onSubmitHandler]\", postModel);\n    dispatch(submitTodoAsync(postModel));\n  }, []);\n\n  const onDeleteHandler = useCallback((item: ITodo) => {\n    console.log(\"[Bucket.tsx] [onDeleteHandler]\", item);\n    dispatch(deleteTodoAsync(item._id!));\n  }, []);\n\n  const toggleAccomplishedHandler = useCallback((item: ITodo) => {\n    const postModel = { ...item, isAccomplished: !item.isAccomplished };\n    console.log(\"[Bucket.tsx] [toggleAccomplishedHandler]\", postModel);\n    dispatch(submitTodoAsync(postModel));\n  }, []);\n\n  return (\n    <>\n      <div className=\"col-lg-4 col-mrg\">\n        <div className=\"card\" style={{ width: \"18rem\" }}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\" style={{ textAlign: \"center\" }}>\n              {model.bucketName}\n            </h5>\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <TodoAdd onSubmit={onSubmitHandler} todo={todo} />\n              </div>\n              <TodoList\n                item={model.TodoList}\n                onDelete={onDeleteHandler}\n                onEdit={onEditHandler}\n                toggleAccomplished={toggleAccomplishedHandler}\n              ></TodoList>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(Todo);\n","/Users/kartik/Desktop/buckets-todo/app/src/container/Bucket.tsx",["130","131","132","133","134"],"import * as React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport BucketAdd from \"../components/BucketAdd\";\nimport BucketList from \"../components/BucketList\";\nimport { IBucket } from \"../interface/IBucket\";\nimport {\n  getBucketListAsync,\n  saveBucketAsync,\n  setBucket,\n  submitBucketAsync,\n  unsetBucket,\n} from \"../store/Action\";\nimport { RootAction, RootState } from \"../store/Store\";\n\ninterface IBucketProps {}\n\nconst Bucket: React.FunctionComponent<IBucketProps> = (props) => {\n  const bucket = useSelector((state: RootState) => state.bucket);\n  const dispatch = useDispatch<RootAction | any>();\n\n  useEffect(() => {\n    dispatch(getBucketListAsync());\n  }, []);\n\n  const onEditHandler = useCallback((item: IBucket) => {\n    console.log(\"[Bucket.tsx] [oneditHandler]\", item);\n    dispatch(setBucket(item));\n  }, []);\n\n  const onSubmitHandler = useCallback((item: IBucket) => {\n    console.log(\"[Bucket.tsx] [onSubmitHandler]\", item);\n    dispatch(submitBucketAsync(item));\n  }, []);\n\n  const onCancelHandler = useCallback(() => {\n    console.log(\"[Bucket.tsx] [onCancelHandler]\");\n    dispatch(unsetBucket());\n  }, []);\n\n  return (\n    <>\n      <BucketList list={bucket.list} onEdit={onEditHandler}>\n        <BucketAdd\n          bucket={bucket.bucket}\n          onSubmit={onSubmitHandler}\n          onCancel={onCancelHandler}\n        />\n      </BucketList>\n    </>\n  );\n};\n\nexport default React.memo(Bucket);\n","/Users/kartik/Desktop/buckets-todo/app/src/api/BucketApi.ts",[],"/Users/kartik/Desktop/buckets-todo/app/src/api/TodoApi.ts",[],"/Users/kartik/Desktop/buckets-todo/app/src/components/TodoAdd.tsx",["135","136"],"import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { ITodo } from \"../interface/ITodo\";\n\ninterface ITodoAddProps {\n  todo: ITodo;\n  onSubmit: (args: ITodo) => void;\n}\n\nconst TodoAdd: React.FunctionComponent<ITodoAddProps> = ({\n  onSubmit,\n  todo,\n}) => {\n  const [model, setModel] = useState<{ _id: string; name: string }>({\n    _id: \"\",\n    name: \"\",\n  });\n\n  useEffect(() => {\n    setModel({ ...model, ...todo });\n  }, [todo]);\n\n  const changeHandler = ($event: React.ChangeEvent<HTMLInputElement>) => {\n    setModel({ ...model, name: $event?.currentTarget?.value });\n  };\n\n  const cancelHandler = () => {\n    setModel({ _id: \"\", name: \"\" });\n  };\n\n  const submitHandler = () => {\n    onSubmit({ ...todo, ...model });\n    cancelHandler();\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-lg-7\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value={model?.name}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className=\"col-5\">\n          <i\n            onClick={submitHandler}\n            className={classNames({\n              disabled: model.name.length > 0 ? false : true,\n              \"fa fa-plus-square fa-lg\": model._id.length == 0 ? true : false,\n              \"fa fa-pencil-square-o fa-lg\": model._id.length > 0 ? true : false,\n            })}\n            aria-hidden=\"true\"\n            style={{ color: \"gray\" }}\n          ></i>\n          <i\n            onClick={() => cancelHandler()}\n            className=\"fa fa-window-close fa-lg\"\n            aria-hidden=\"true\"\n            style={{ color: \"gray\" }}\n          ></i>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(TodoAdd);\n","/Users/kartik/Desktop/buckets-todo/app/src/components/TodoList.tsx",[],"/Users/kartik/Desktop/buckets-todo/app/src/components/BucketList.tsx",[],["137","138"],"/Users/kartik/Desktop/buckets-todo/app/src/components/BucketAdd.tsx",[],"/Users/kartik/Desktop/buckets-todo/app/src/api/UriConstants.ts",[],"/Users/kartik/Desktop/buckets-todo/app/src/shared/core/HttpRequest.ts",[],"/Users/kartik/Desktop/buckets-todo/app/src/container/Login.tsx",["139"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport { IUser } from \"../interface/IUser\";\nimport { login } from \"../store/Action\";\n\ninterface ILoginProps {}\n\ntype loginForm = Required<Pick<IUser, \"userName\" | \"password\">>;\n\nconst Login: React.FunctionComponent<ILoginProps> = (props) => {\n  const [errorState, setErrorState] = useState<string>(\"\");\n  const dispact = useDispatch();\n  const history = useHistory();\n\n  const initialValues: loginForm = {\n    userName: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = yup.object<loginForm>({\n    userName: yup.string().required(\"username is required\"),\n    password: yup.string().required(\"password is required\"),\n  });\n\n  const onSubmit = async (formData: loginForm) => {\n    // dispact(login(formData as IUser));\n    dispact(\n      login(formData as IUser, (error: Error | null, res: unknown) => {\n        error ? setErrorState(error.message) : history.push(\"/bucket\");\n      })\n    );\n  };\n\n  const loginForm = (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <div className=\"form-group\">\n          <Field\n            name=\"userName\"\n            type=\"text\"\n            id=\"login\"\n            className=\"fadeIn second\"\n            placeholder=\"User Name\"\n          />\n          <ErrorMessage name=\"userName\">\n            {(msg: any) => <span className=\"error\"> {msg} </span>}\n          </ErrorMessage>\n        </div>\n        <div className=\"form-group\">\n          <Field\n            name=\"password\"\n            type=\"password\"\n            id=\"password\"\n            className=\"fadeIn third\"\n            placeholder=\"Password\"\n          />\n          <ErrorMessage name=\"password\">\n            {(msg: any) => <span className=\"error\"> {msg} </span>}\n          </ErrorMessage>\n        </div>\n        <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" />\n      </Form>\n    </Formik>\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"wrapper fadeInDown\">\n        <div id=\"formContent\">\n          {loginForm}\n          <span className=\"error\">{errorState ? errorState : null}</span>\n          <div id=\"formFooter\">\n            <a\n              className=\"underlineHover\"\n              href=\"#\"\n              onClick={() => history.push(\"/register\")}\n            >\n              Dont have account ? Register\n            </a>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","/Users/kartik/Desktop/buckets-todo/app/src/api/AccountApi.ts",[],"/Users/kartik/Desktop/buckets-todo/app/src/shared/RouteGuard.tsx",["140"],"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { RootState } from \"../store/Store\";\n\nconst RouteGuard = ({ component: Component, ...rest }: any) => {\n  const authState = useSelector((state: RootState) => state.auth);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return true ? (\n          authState.isAuthenticated ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location.pathname },\n              }}\n            />\n          )\n        ) : (\n          <h1>loading route please wait ...</h1>\n        );\n      }}\n    />\n  );\n};\n\nexport default RouteGuard;\n","/Users/kartik/Desktop/buckets-todo/app/src/container/Register.tsx",["141"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport { IUser } from \"../interface/IUser\";\nimport { signUp } from \"../store/Action\";\n\ntype registerForm = Required<Pick<IUser, \"userName\" | \"password\">>;\n\ninterface IRegisterProps {}\n\nconst Register: React.FunctionComponent<IRegisterProps> = (props) => {\n  const [message, setmessage] = useState<{ isError: boolean; message: string }>(\n    {\n      isError: false,\n      message: \"\",\n    }\n  );\n  const dispact = useDispatch();\n  const history = useHistory();\n\n  const initialValues: registerForm = {\n    userName: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = yup.object<registerForm>({\n    userName: yup.string().required(\"username is required\"),\n    password: yup.string().required(\"password is required\"),\n  });\n\n  const onSubmit = async (formData: registerForm, { resetForm }: any) => {\n    // dispact(login(formData as IUser));\n    dispact(\n      signUp(formData as IUser, (error: Error | null, res: unknown) => {\n        error\n          ? setmessage({ isError: true, message: error.message })\n          : (() => {\n              resetForm({});\n              setmessage({ isError: false, message: \"Registered succesfully\" });\n            })();\n      })\n    );\n  };\n\n  const loginForm = (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <div className=\"form-group\">\n          <Field\n            name=\"userName\"\n            type=\"text\"\n            id=\"login\"\n            className=\"fadeIn second\"\n            placeholder=\"Enter UserName\"\n          />\n          <ErrorMessage name=\"userName\">\n            {(msg: any) => <span className=\"error\"> {msg} </span>}\n          </ErrorMessage>\n        </div>\n        <div className=\"form-group\">\n          <Field\n            name=\"password\"\n            type=\"password\"\n            id=\"password\"\n            className=\"fadeIn third\"\n            placeholder=\"Enter Password\"\n          />\n          <ErrorMessage name=\"password\">\n            {(msg: any) => <span className=\"error\"> {msg} </span>}\n          </ErrorMessage>\n        </div>\n        <input type=\"submit\" className=\"fadeIn fourth\" value=\"Register\" />\n      </Form>\n    </Formik>\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"wrapper fadeInDown\">\n        <div id=\"formContent\">\n          {loginForm}\n          <span className={message.isError ? \"error\" : \"success\"}>\n            {message.message ?? null}\n          </span>\n          <div id=\"formFooter\">\n            <a\n              className=\"underlineHover\"\n              href=\"#\"\n              onClick={() => history.push(\"/login\")}\n            >\n              Back to Login\n            </a>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"146","severity":1,"message":"150","line":8,"column":21,"nodeType":"148","messageId":"149","endLine":8,"endColumn":26},{"ruleId":"146","severity":1,"message":"151","line":1,"column":44,"nodeType":"148","messageId":"149","endLine":1,"endColumn":51},{"ruleId":"152","severity":1,"message":"153","line":45,"column":15,"nodeType":"154","endLine":45,"endColumn":56},{"ruleId":"155","severity":1,"message":"156","line":17,"column":6,"nodeType":"157","endLine":17,"endColumn":8,"suggestions":"158"},{"ruleId":"146","severity":1,"message":"159","line":7,"column":10,"nodeType":"148","messageId":"149","endLine":7,"endColumn":17},{"ruleId":"146","severity":1,"message":"160","line":16,"column":10,"nodeType":"148","messageId":"149","endLine":16,"endColumn":15},{"ruleId":"161","severity":1,"message":"162","line":152,"column":63,"nodeType":"163","messageId":"164","endLine":152,"endColumn":65},{"ruleId":"146","severity":1,"message":"165","line":11,"column":3,"nodeType":"148","messageId":"149","endLine":11,"endColumn":19},{"ruleId":"146","severity":1,"message":"166","line":14,"column":22,"nodeType":"148","messageId":"149","endLine":14,"endColumn":31},{"ruleId":"155","severity":1,"message":"167","line":33,"column":6,"nodeType":"157","endLine":33,"endColumn":8,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"169","line":38,"column":6,"nodeType":"157","endLine":38,"endColumn":8,"suggestions":"170"},{"ruleId":"155","severity":1,"message":"169","line":44,"column":6,"nodeType":"157","endLine":44,"endColumn":8,"suggestions":"171"},{"ruleId":"146","severity":1,"message":"172","line":10,"column":3,"nodeType":"148","messageId":"149","endLine":10,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":25,"column":6,"nodeType":"157","endLine":25,"endColumn":8,"suggestions":"173"},{"ruleId":"155","severity":1,"message":"169","line":30,"column":6,"nodeType":"157","endLine":30,"endColumn":8,"suggestions":"174"},{"ruleId":"155","severity":1,"message":"169","line":35,"column":6,"nodeType":"157","endLine":35,"endColumn":8,"suggestions":"175"},{"ruleId":"155","severity":1,"message":"169","line":40,"column":6,"nodeType":"157","endLine":40,"endColumn":8,"suggestions":"176"},{"ruleId":"155","severity":1,"message":"177","line":22,"column":6,"nodeType":"157","endLine":22,"endColumn":12,"suggestions":"178"},{"ruleId":"161","severity":1,"message":"162","line":53,"column":59,"nodeType":"163","messageId":"164","endLine":53,"endColumn":61},{"ruleId":"142","replacedBy":"179"},{"ruleId":"144","replacedBy":"180"},{"ruleId":"152","severity":1,"message":"181","line":82,"column":13,"nodeType":"154","endLine":86,"endColumn":14},{"ruleId":"146","severity":1,"message":"182","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"181","line":94,"column":13,"nodeType":"154","endLine":98,"endColumn":14},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"@typescript-eslint/no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'compose' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'getTodo' is defined but never used.","'debug' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getTodoListAsync' is defined but never used.","'RootState' is defined but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'model'. Either include them or remove the dependency array.",["186"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["187"],["188"],"'saveBucketAsync' is defined but never used.",["189"],["190"],["191"],["192"],"React Hook useEffect has a missing dependency: 'model'. Either include it or remove the dependency array. You can also do a functional update 'setModel(m => ...)' if you only need 'model' in the 'setModel' call.",["193"],["183"],["184"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"194","fix":"198"},{"desc":"194","fix":"199"},{"desc":"194","fix":"200"},{"desc":"194","fix":"201"},{"desc":"194","fix":"202"},{"desc":"194","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [dispatch]",{"range":"206","text":"207"},"Update the dependencies array to be: [dispatch, model]",{"range":"208","text":"209"},{"range":"210","text":"207"},{"range":"211","text":"207"},{"range":"212","text":"207"},{"range":"213","text":"207"},{"range":"214","text":"207"},{"range":"215","text":"207"},"Update the dependencies array to be: [model, todo]",{"range":"216","text":"217"},[551,553],"[dispatch]",[1020,1022],"[dispatch, model]",[1187,1189],[1452,1454],[741,743],[895,897],[1061,1063],[1198,1200],[491,497],"[model, todo]"]